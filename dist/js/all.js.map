{"version":3,"sources":["brawlApp.js","mainCtrl.js","mainService.js","footerDir.js","navDir.js","table-head-dir.js","player-headerCtrl.js","team-choicesCtrl.js","rosterCtrl.js","fightCtrl.js"],"names":["angular","module","config","$stateProvider","$urlRouterProvider","state","url","views","home-header","templateUrl","team-choices","controller","player-header","roster","fight","results","otherwise","$scope","mainService","FlickityService","$timeout","test","test1","getTeams","then","teamData","console","log","element","document","getElementById","create","id","flickityOptions","service","$http","this","getDbData","method","response","data","dbGetTeams","directive","restrict","$stateParams","team","find","name","teamId","teamSlug","logo","main","leftPlayer","$","children","hide","show","rightPlayer","$document","ready","css","flickity","cellSelector","cellAlign","pageDots","adaptiveHeight","imagesLoaded","autoPlay","contain","currentTeamData","addClass","addPlayerLeft","player","stop","fadeIn","rightplayer","addPlayerRight","getTeamInfo","selectedTeam","leftPlyrImgState","restimg","rightPlyrImgState","leftGameResult","rightGameResult","generateStatVariation","stat","value","modifier","parseFloat","toFixed","n","a","b","i","list","Math","random","randomList","preventNegatives","num","sign","descriptives","mean","sum","len","length","Infinity","min","max","sd","sqrt","range","generateGameStats","playerObj","key","ppg","round","rpg","bpg","stls","fgPct","brawl","fadeOut","leftPlayerGameStats","rightPlayerGameStats","winimg","loseimg","apg","fgpct"],"mappings":"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","file":"all.js","sourcesContent":["angular.module(\"brawlApp\", ['ui.router', 'ngAnimate', 'bc.Flickity'])\r\n    .config(['$stateProvider','$urlRouterProvider',function($stateProvider, $urlRouterProvider){\r\n        // var mainState = {\r\n        //     name: 'main',\r\n        //     views: {\r\n        //         header: 'headerComponent',\r\n        //         header2: \"header2\",\r\n        //         nav: 'navComponent',\r\n        //         content: 'mainComponent',\r\n        //     }\r\n        // };\r\n        \r\n        $stateProvider\r\n            .state('home', {\r\n                url: '/',\r\n                views:{\r\n                    'home-header':{\r\n                        templateUrl: \"../views/home-header/home-header.html\"\r\n                    },\r\n                    // 'player-header':{\r\n                    //     templateUrl: \"../views/player-header/player-header.html\",\r\n                    //     controller: \"player-headerCtrl\"\r\n                    // },\r\n                    'team-choices':{\r\n                        templateUrl: \"../views/team-choices/team-choices.html\",\r\n                        controller: \"team-choicesCtrl\"\r\n                    }\r\n                }\r\n            })\r\n            .state('team-select', {\r\n                url: '/team-select',\r\n                views:{\r\n                    'player-header':{\r\n                        templateUrl: \"../views/player-header/player-header.html\",\r\n                        controller: \"player-headerCtrl\"\r\n                    },\r\n                    'team-choices':{\r\n                        templateUrl: \"../views/team-choices/team-choices.html\",\r\n                        controller: \"team-choicesCtrl\"\r\n                    }\r\n                }\r\n            })\r\n            .state('team-roster', {\r\n                url: '/team-roster/:teamId',\r\n                views:{\r\n                    'player-header':{\r\n                        templateUrl: \"../views/player-header/player-header.html\",\r\n                        controller: \"rosterCtrl\"\r\n                    },\r\n                    'roster':{\r\n                        templateUrl: \"../views/roster/roster.html\",\r\n                        controller: \"rosterCtrl\"\r\n                        \r\n                    }\r\n                }\r\n            })\r\n            .state('fight-view', {\r\n                url: '/fight',\r\n                views:{\r\n                    // 'player-header':{\r\n                    //     templateUrl: \"../views/player-header/player-header.html\",\r\n                    //     controller: \"player-headerCtrl\"\r\n                        \r\n                    // },\r\n                    'fight':{\r\n                        templateUrl: \"../views/fight/fight.html\",\r\n                        controller: \"fightCtrl\"\r\n                        \r\n                    }\r\n                }\r\n            })\r\n            .state('results-view', {\r\n                url: '/results',\r\n                views:{\r\n                    // 'player-header':{\r\n                    //     templateUrl: \"../views/player-header/player-header.html\",\r\n                    //     controller: \"player-headerCtrl\"\r\n                        \r\n                    // },\r\n                    'results':{\r\n                        templateUrl: \"../views/results/results.html\",\r\n                        controller: \"fightCtrl\"\r\n                        \r\n                    }\r\n                }\r\n            })\r\n            // .state('fight-view', {\r\n            //     url: '/fight',\r\n            //     parent: 'roster',\r\n            //     templateUrl: '../views/fight/fight.html'\r\n            // })\r\n            // .state('results', {\r\n            //     url: '/results/:id',\r\n            //     parent: \"fight\",\r\n            //     templateUrl: '../views/results/results.html'\r\n            // })\r\n\r\n        $urlRouterProvider\r\n            .otherwise('/');\r\n    }])\r\n","angular.module(\"brawlApp\").controller(\"mainCtrl\", ['$scope', 'mainService', 'FlickityService', '$timeout',function($scope, mainService, FlickityService, $timeout){\r\n// ***********************************   \r\n//                TEST \r\n    $scope.test = \"Controller is working\";\r\n    $scope.test1 = mainService.test1;\r\n\r\n// ***********************************  \r\n//    $scope.opened = true;\r\n//     $scope.toggle = () => $scope.opened = !$scope.opened;\r\n\r\n        \r\n\r\n        //*************DataBase************ */\r\n\r\n\r\n        //THIS HAS to be in MainCTRL for the flickity slider to work.\r\n        mainService.getTeams().then(function (teamData) {\r\n\r\n            $scope.teamData = teamData;\r\n            console.log($scope.teamData)\r\n\r\n            // Get the element that should hold the slider\r\n            var element = angular.element(document.getElementById('team-slider'));\r\n            console.log(element);\r\n\r\n            // NOTE: When fetching remote data, we initialize the Flickity\r\n            // instance inside of a $timeout. This ensures that the slides\r\n            // have already been assigned to scope before the slider is\r\n            // initialized.\r\n            $timeout(function () {\r\n                // Initialize our Flickity instance\r\n                FlickityService.create(element[0], element[0].id, $scope.flickityOptions);\r\n            });\r\n        });\r\n\r\n    \r\n\r\n    \r\n\r\n}]);\r\n\r\n","angular.module(\"brawlApp\").service(\"mainService\", ['$http', function($http){\r\n    // *********************************** \r\n    //                TEST\r\n    this.test1 = \"Service is working\";\r\n    // *********************************** \r\n   \r\n// ****************************************\r\n//     this.getPlayers = function(){\r\n//         return $http ({\r\n//             method: 'GET',\r\n//             url:\"https://api.stattleship.com/basketball/nba/players\",\r\n//             headers: {\r\n//                 'Content-Type' : 'application/json',\r\n//                 'Authorization' : 'Token token=46dbbda6eb33623048fb17208f8bea1c',\r\n//                 'Accept': 'application/vnd.stattleship.com; version=1'\r\n//             }\r\n//         }).then(function(response){\r\n//             // console.log(response.data)\r\n//             return response.data;\r\n//         })\r\n//     }\r\n\r\n//    this.getPlayerStats = function(){\r\n//         return $http ({\r\n//             method: 'GET',\r\n//             url:\"https://api.stattleship.com/basketball/nba/player_season_stats/?season_id=\" + \"nba-2015-2016\" + \"&player_id=\"  + \"nba-arron-afflalo\",\r\n//             headers: {\r\n//                 'Content-Type' : 'application/json',\r\n//                 'Authorization' : 'Token token=46dbbda6eb33623048fb17208f8bea1c',\r\n//                 'Accept': 'application/vnd.stattleship.com; version=1'\r\n//             }\r\n//         }).then(function(response){\r\n//             // console.log(response.data)\r\n//             return response.data;\r\n//         })\r\n//     }\r\n\r\n\r\n\r\n//     this.getRosters = function(teamSlug){\r\n//         return $http ({\r\n//             method: 'GET',\r\n//             url:\"https://api.stattleship.com/basketball/nba/rosters/?team_id=\" + teamSlug,\r\n//             headers: {\r\n//                 'Content-Type' : 'application/json',\r\n//                 'Authorization' : 'Token token=46dbbda6eb33623048fb17208f8bea1c',\r\n//                 'Accept': 'application/vnd.stattleship.com; version=1'\r\n//             }\r\n//         }).then(function(response){\r\n//             // console.log(response.data)\r\n//             return response.data;\r\n//         })\r\n//     }\r\n// ****************************************\r\n\r\nthis.getDbData = function(id){\r\n    return $http ({\r\n        method: 'GET',\r\n        url: '/getTeamInfo/' + id\r\n\r\n    }).then(function(response){\r\n        // console.log(\"hello\" + response);\r\n        return response.data;\r\n    })\r\n}\r\n\r\n //get team-select logos\r\n    this.getTeams = function(){\r\n        return $http ({\r\n            method: 'GET',\r\n            url:\"../JSON/teams.json\",\r\n        }).then(function(response){\r\n            \r\n            // console.log(response.data)\r\n            return response.data\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n//******************DATABASE****************** */\r\nthis.dbGetTeams = function(){\r\n    return $http ({\r\n            method: 'GET',\r\n            url:\"http://localhost:8083/getLogo\",\r\n        }).then(function(response){\r\n            // console.log(response.data)\r\n            return response.data\r\n        })\r\n    }\r\n\r\n}]);","angular.module(\"brawlApp\")\r\n.directive(\"footerDir\", function(){\r\n    return {\r\n        restrict: \"E\",\r\n        templateUrl: \"./directives/footer/footerDir.html\"\r\n    }\r\n})","angular.module(\"brawlApp\")\r\n.directive(\"navDir\", function(){\r\n    return {\r\n        restrict: \"E\",\r\n        templateUrl: \"./directives/nav/navDir.html\"\r\n    }\r\n})","angular.module(\"brawlApp\")\r\n.directive(\"table-head-dir\", function(){\r\n    return {\r\n        restrict: \"E\",\r\n        templateUrl: \"./directives/table-head-dir/table-head-dir.html\"\r\n    }\r\n})","angular.module(\"brawlApp\").controller(\"player-headerCtrl\", ['$scope','mainService','$stateParams', function($scope, mainService, $stateParams){\r\n \r\n\r\n\r\n   \r\n    mainService.getTeams()\r\n        .then(function(teamData){\r\n            $scope.teamData = teamData;\r\n            // console.log(\"teamJSON\", $scope.teamData);\r\n            var team = teamData.find(function(team){\r\n                return team.name === $stateParams.teamId;\r\n            });\r\n            if(team) {\r\n                $scope.teamSlug = team.name;\r\n                $scope.logo = team.logo;\r\n            } else {\r\n                return 'Atlanta Hawks';\r\n            }\r\n            return team.name;\r\n    });\r\n\r\n\r\n    if($scope.main.leftPlayer){\r\n        console.log(\"BEFORE HIDE\")\r\n        $(\".player-portrait-1\").children(\".selectPlayer\").hide();\r\n        $(\".player-information-wrapper-left\").show();\r\n    } else{\r\n        $(\".player-information-wrapper-left\").hide();\r\n    }\r\n    if($scope.main.rightPlayer){\r\n        $(\".player-portrait-2\").children(\".selectPlayer\").hide();\r\n        $(\".player-information-wrapper-right\").show();\r\n    } else{\r\n        $(\".player-information-wrapper-right\").hide();\r\n    }\r\n\r\n    if($scope.main.leftPlayer && $scope.main.rightPlayer){\r\n        $(\".roster-logo\").show();\r\n    } else{\r\n        $(\".roster-logo\").hide();\r\n    }\r\n\r\n}]);","angular.module(\"brawlApp\").controller(\"team-choicesCtrl\", ['$scope','mainService','$stateParams','$document', '$timeout', 'FlickityService', function ($scope, mainService, $stateParams, $document, $timeout, FlickityService) {\r\n    $(document).ready(function () {\r\n        $('.player-header-1').css('position', 'relative');\r\n        // $('.carousel-wrapper').slick({\r\n        //     infinite: true,\r\n        //     slidesToShow: 5,\r\n        //     slidesToScroll: 2,\r\n        //     autoplay: true,\r\n        //     autoplaySpeed: 3500\r\n        // });\r\n\r\n        $('.carousel-wrapper').flickity({\r\n            // options\r\n            cellSelector: '.carousel-cell',\r\n            cellAlign: 'left',\r\n            pageDots: false,\r\n            // groupCells: 3,\r\n            adaptiveHeight: false,\r\n            imagesLoaded: true,\r\n            autoPlay: true,\r\n            contain: true\r\n        });\r\n\r\n    });\r\n    $scope.flickityOptions = {\r\n        // options\r\n        cellSelector: '.carousel-cell',\r\n        cellAlign: 'left',\r\n        pageDots: false,\r\n        // groupCells: 3,\r\n        adaptiveHeight: false,\r\n        imagesLoaded: true,\r\n        autoPlay: true,\r\n        contain: true\r\n    }\r\n\r\n\r\n\r\n    // mainService.getTeams().then(function (teamData) {\r\n\r\n    //     $scope.teamData = teamData;\r\n    //     console.log($scope.teamData)\r\n\r\n    //     // Get the element that should hold the slider\r\n    //     var element = angular.element(document.getElementById('team-slider'));\r\n    //     console.log(element);\r\n\r\n    //     // NOTE: When fetching remote data, we initialize the Flickity\r\n    //     // instance inside of a $timeout. This ensures that the slides\r\n    //     // have already been assigned to scope before the slider is\r\n    //     // initialized.\r\n    //     $timeout(function () {\r\n    //         // Initialize our Flickity instance\r\n    //         FlickityService.create(element[0], element[0].id, $scope.flickityOptions);\r\n    //     });\r\n    // });\r\n}]);","angular.module(\"brawlApp\").controller(\"rosterCtrl\", ['$scope', '$timeout', 'mainService','$stateParams', function($scope, $timeout, mainService, $stateParams){\r\n    // $scope.test1 = \"RosterCTRL WORKING\";\r\n    // console.log(\"rosterCtrl\");\r\n    \r\n    // $scope.leftPlayer = {};\r\n    // $scope.rightPlayer = {};\r\n\r\n\r\n        \r\n    mainService.getDbData(url).then(function(response){\r\n        // console.log(\"Player Stats of Selected Team\", response);\r\n        $scope.currentTeamData = response;\r\n        // return response;\r\n    });\r\n\r\n    $(\".selectPlayer\").addClass(\"animate-flicker\");\r\n\r\n\r\n    function fadeEffect1 (){\r\n        $(\".portrait-wrapper-1\").stop(true,true).hide().fadeIn();\r\n    }\r\n    function fadeEffect2 (){\r\n        $(\".portrait-wrapper-2\").stop(true,true).hide().fadeIn();\r\n    }\r\n    \r\n    if($scope.main.leftPlayer && $scope.main.rightPlayer){\r\n        $(\".roster-logo\").show();\r\n    } else{\r\n        $(\".roster-logo\").hide();\r\n    }\r\n\r\n    $scope.addPlayerLeft = function(player) {\r\n       \r\n        $scope.main.leftPlayer = player;\r\n        console.log($scope.main.leftPlayer);\r\n        $(\".player-portrait-1\").children(\".selectPlayer\").css(\"display\", \"none\");\r\n        fadeEffect1();\r\n        $(\".player-information-wrapper-left\").css(\"display\", \"inline-block\");\r\n        if($scope.main.leftPlayer && $scope.main.rightplayer){\r\n            $(\".roster-logo\").show();\r\n        } else{\r\n            $(\".roster-logo\").hide();\r\n        }\r\n    }\r\n    \r\n    $scope.addPlayerRight = function(player) {\r\n        \r\n        $scope.main.rightPlayer = player;\r\n        console.log($scope.main.rightPlayer);\r\n        $(\".player-portrait-2\").children(\".selectPlayer\").css(\"display\", \"none\");\r\n        fadeEffect2();\r\n        $(\".player-information-wrapper-right\").css(\"display\", \"inline-block\");\r\n        if($scope.main.leftPlayer && $scope.main.rightPlayer){\r\n            $(\".roster-logo\").show();\r\n        } else{\r\n            $(\".roster-logo\").hide();\r\n        }\r\n      \r\n    }\r\n\r\n\r\n// *********************************************************\r\n    //gets player information: names, stats, based on team-url\r\n    var url = $stateParams.teamId;\r\n    \r\n    \r\n    $scope.getTeamInfo = function(url){\r\n        mainService.getDbData(url).then(function(response){\r\n            // console.log(\"Player Stats of Selected Team\", response);\r\n            $scope.selectedTeam = response;\r\n            // return response;\r\n            \r\n        });\r\n    }\r\n    $scope.getTeamInfo(url);\r\n    // ---------------------------------------\r\n\r\n//Returns correct URL ending for what is team is selected.\r\n    mainService.getTeams()\r\n    \r\n        .then(function(teamData){\r\n            $scope.teamData = teamData;\r\n            // console.log(\"teamJSON\", $scope.teamData);\r\n            var team = teamData.find(function(team){\r\n                console.log($stateParams.teamId)\r\n                return team.name === $stateParams.teamId;\r\n            });\r\n            \r\n            if(team) {\r\n                $scope.teamSlug = team.name;\r\n                $scope.logo = team.logo;\r\n            } else {\r\n                return 'Atlanta Hawks';\r\n            }\r\n            return team.name;\r\n    });\r\n   \r\n    if($scope.main.leftPlayer){\r\n        console.log(\"BEFORE HIDE\")\r\n        $(\".player-portrait-1\").children(\".selectPlayer\").hide();\r\n        $(\".player-information-wrapper-left\").show();\r\n    } else{\r\n        $(\".player-information-wrapper-left\").hide();\r\n    }\r\n    if($scope.main.rightPlayer){\r\n        $(\".player-portrait-2\").children(\".selectPlayer\").hide();\r\n        $(\".player-information-wrapper-right\").show();\r\n    } else{\r\n        $(\".player-information-wrapper-right\").hide();\r\n    }\r\n    \r\n\r\n}]);","angular.module(\"brawlApp\").controller(\"fightCtrl\", ['$scope','mainService','$stateParams', function($scope, mainService, $stateParams){\r\n    $scope.leftPlyrImgState = $scope.main.leftPlayer.restimg;\r\n    $scope.rightPlyrImgState = $scope.main.rightPlayer.restimg;\r\n    $scope.leftGameResult = \"\";\r\n    $scope.rightGameResult = \"\";\r\n    \r\n    var fadeOutTransition = function(){\r\n        $('.player-card-container-left').children(\".player-card\").addClass(\"result-card-left\");\r\n        $('.player-card-container-right').children(\".player-card\").addClass(\"result-card-right\");\r\n        $(\".result-stats-wrapper-left\").addClass(\"slide-out-left\");\r\n        $(\".result-stats-wrapper-right\").addClass(\"slide-out-right\");\r\n        $(\".vs\").addClass(\"vs-small\");\r\n        $(\".game-result-left\").addClass(\"fadeIn\");\r\n        $(\".game-result-right\").addClass(\"fadeIn\");\r\n        $('.fight-btn').fadeOut(500);\r\n        \r\n    }\r\n    \r\n    var fadeInTransition = function(){\r\n        $('.play-again-btn, .player-card img').stop(true,true).hide().fadeIn();\r\n    }\r\n    \r\n    var brawlProcess = function (){\r\n\r\n        if($scope.leftPlayerGameStats.ppg > $scope.rightPlayerGameStats.ppg){\r\n            $scope.leftGameResult = \"Win\";\r\n            $scope.rightGameResult = \"Lose\";\r\n            $scope.leftPlyrImgState = $scope.main.leftPlayer.winimg;\r\n            $scope.rightPlyrImgState = $scope.main.rightPlayer.loseimg;\r\n        } else if($scope.leftPlayerGameStats.ppg < $scope.rightPlayerGameStats.ppg){\r\n            $scope.leftGameResult = \"Lose\";\r\n            $scope.rightGameResult = \"Win\";\r\n            $scope.leftPlyrImgState = $scope.main.leftPlayer.loseimg;\r\n            $scope.rightPlyrImgState = $scope.main.rightPlayer.winimg;\r\n        } else {\r\n            $scope.leftGameResult = \"Overtime\";\r\n            $scope.rightGameResult = \"Overtime\";\r\n            $scope.leftPlyrImgState = $scope.main.leftPlayer.winimg;\r\n            $scope.rightPlyrImgState = $scope.main.rightPlayer.winimg;\r\n\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    $scope.brawl = function (){\r\n        fadeOutTransition();\r\n        \r\n        brawlProcess();\r\n        \r\n        fadeInTransition();\r\n        \r\n    }\r\n\r\n\r\n    $scope.leftPlayerGameStats = {\r\n        ppg: $scope.main.leftPlayer.ppg,\r\n        rpg: $scope.main.leftPlayer.rpg,\r\n        apg: $scope.main.leftPlayer.apg,\r\n        bpg: $scope.main.leftPlayer.bpg,\r\n        stls: $scope.main.leftPlayer.stls,\r\n        fgPct: $scope.main.leftPlayer.fgpct\r\n    }\r\n\r\n    $scope.rightPlayerGameStats = {\r\n        ppg: $scope.main.rightPlayer.ppg,\r\n        rpg: $scope.main.rightPlayer.rpg,\r\n        apg: $scope.main.rightPlayer.apg,\r\n        bpg: $scope.main.rightPlayer.bpg,\r\n        stls: $scope.main.rightPlayer.stls,\r\n        fgPct: $scope.main.rightPlayer.fgpct\r\n    }\r\n    \r\n    function generateStatVariation(stat,value){\r\n        var modifier;\r\n        var statLow;\r\n        var statHigh;\r\n        var list;\r\n        value = parseFloat(value).toFixed(1);\r\n      \r\n\r\n        switch(stat){\r\n            case \"ppg\": \r\n            modifier = 4;\r\n            break;\r\n            case \"rpg\":\r\n            modifier = 3;\r\n            \r\n            break;\r\n            case \"bpg\":\r\n            modifier = 1;\r\n            \r\n            break;\r\n            case \"stls\":\r\n            modifier = 1;\r\n            \r\n            break;\r\n            case \"fgPct\":\r\n            modifier = 8;\r\n            \r\n            break;\r\n            default: 0;\r\n        }\r\n        statLow = preventNegatives(value - modifier);\r\n        statHigh = preventNegatives(value + modifier);\r\n\r\n        return list = randomList(5,statLow,statHigh);\r\n    }\r\n    function preventNegatives(num){\r\n        if(Math.sign(num) === -1){\r\n            return 0;\r\n        } else{\r\n            return num;\r\n        }\r\n    }\r\n    \r\n    function randomList(n, a, b) {\r\n        // create a list of n numbers between a and b\r\n        var list = [],\r\n        i;\r\n        for (i = 0; i < n; i++) {\r\n            list[i] = Math.random() * (b - a) + a;\r\n        }\r\n        return list;\r\n    }\r\n    \r\n    \r\n    function descriptives(list) {\r\n        // compute mean, sd and the interval range: [min, max]\r\n        var mean,\r\n        sd,\r\n          i,\r\n          len = list.length,\r\n          sum,\r\n          a = Infinity,\r\n          b = -a;\r\n            for (sum = i = 0; i < len; i++) {\r\n              sum += list[i];\r\n              a = Math.min(a, list[i]);\r\n              b = Math.max(b, list[i]);\r\n            }\r\n            mean = sum / len;\r\n            for (sum = i = 0; i < len; i++) {\r\n                sum += (list[i] - mean) * (list[i] - mean);\r\n            }\r\n            sd = Math.sqrt(sum / (len - 1));\r\n            return {\r\n                mean: mean,\r\n                sd: sd,\r\n                range: [a, b]\r\n            };\r\n        }\r\n        \r\n        function generateGameStats(playerObj){\r\n            for(var key in playerObj){\r\n\r\n                switch(key){\r\n                    case \"ppg\": playerObj.ppg = Math.round(descriptives(generateStatVariation(\"ppg\",playerObj.ppg)).mean);\r\n                    break;\r\n                    case \"rpg\": playerObj.rpg = Math.round(descriptives(generateStatVariation(\"rpg\",playerObj.rpg)).mean);\r\n                    break;\r\n                    case \"bpg\": playerObj.bpg = Math.round(descriptives(generateStatVariation(\"bpg\",playerObj.bpg)).mean);\r\n                    break;\r\n                    case \"stls\": playerObj.stls = Math.round(descriptives(generateStatVariation(\"stls\",playerObj.stls)).mean);\r\n                    break;\r\n                    case \"fgPct\": playerObj.fgPct = Math.round(descriptives(generateStatVariation(\"fgPct\",playerObj.fgPct)).mean);\r\n                    break;\r\n                    default: 0;\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        generateGameStats($scope.leftPlayerGameStats);\r\n        generateGameStats($scope.rightPlayerGameStats);\r\n\r\n    //   function forceDescriptives(list, mean, sd) {\r\n    //     // transfom a list to have an exact mean and sd\r\n    //     var oldDescriptives = descriptives(list),\r\n    //       oldMean = oldDescriptives.mean,\r\n    //       oldSD = oldDescriptives.sd,\r\n    //       newList = [],\r\n    //       len = list.length,\r\n    //       i;\r\n    //     for (i = 0; i < len; i++) {\r\n    //       newList[i] = sd * (list[i] - oldMean) / oldSD + mean;\r\n    //     }\r\n    //     return newList;\r\n    //   }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}]);"]}